<html><head><script src="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\jshidebutton.js"></script><link rel="stylesheet" type="text/css" href="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\styling.css">
 </head>  
 <body> 
 <pre>
<h3> Child.h</h3><h4>Dependencies:</h4><a href ="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\TA-TEST-Project-2\.htm files\Child.h.htm"><label>Child.h</label></a> 
 ----------------------------------------------------------------------------------------------------

#ifndef CHILD_H
#define CHILD_H

#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;map&gt;


int globalData = 10;

namespace ChildTest <br> <button onclick = "hidebutton('402946')">+</button> { <Span id="402946"  > 
	
	struct element <br> <button onclick = "hidebutton('402964')">+</button> { <Span id="402964"  > 
		std::string name, type;
		int start_line, end_line;
		std::vector&lt;element&gt; children;
	<br></Span>} ;
	enum Numbers <br> <button onclick = "hidebutton('403066')">+</button> { <Span id="403066"  >  one = 1, two, three, four <br></Span>} ;
	class Child <br> <button onclick = "hidebutton('403109')">+</button> { <Span id="403109"  > 
	public:
		Child() <br> <button onclick = "hidebutton('403128')">+</button> { <Span id="403128"  > <br></Span>} ;
		~Child() <br> <button onclick = "hidebutton('403142')">+</button> { <Span id="403142"  > <br></Span>} ;
		void inlineMethod(int a) <br> <button onclick = "hidebutton('403172')">+</button> { <Span id="403172"  > 
			int i;
			for (i = 0; i &lt; 2; i++) <br> <button onclick = "hidebutton('403209')">+</button> { <Span id="403209"  > 
				std::cout &lt;&lt; a;
				if (i == 1)
				<br> <button onclick = "hidebutton('403248')">+</button> { <Span id="403248"  > 
					std::cout &lt;&lt; i;
				<br></Span>} 
			<br></Span>} 
			if (i == 1) <br> <button onclick = "hidebutton('403293')">+</button> { <Span id="403293"  > 
				std::cout &lt;&lt; a;
			<br></Span>} 
			else
			<br> <button onclick = "hidebutton('403327')">+</button> { <Span id="403327"  > 
			<br></Span>} 
		<br></Span>} 
		int method1();
		int method3();
		int method2()
		<br> <button onclick = "hidebutton('403384')">+</button> { <Span id="403384"  > 
			std::cout &lt;&lt; "Hello OOD";
			return 0;
		<br></Span>} 
		int method4();
	<br></Span>} ;
	


	static void globalFunction() <br> <button onclick = "hidebutton('403478')">+</button> { <Span id="403478"  > 
		std::map&lt;int, int&gt; map = <br> <button onclick = "hidebutton('403506')">+</button> { <Span id="403506"  >  <br> <button onclick = "hidebutton('403508')">+</button> { <Span id="403508"  >  1,1 <br></Span>} ,<br> <button onclick = "hidebutton('403516')">+</button> { <Span id="403516"  >  2,2 <br></Span>}  <br></Span>} ;
		while (true) <br> <button onclick = "hidebutton('403541')">+</button> { <Span id="403541"  > 
			<br> <button onclick = "hidebutton('403545')">+</button> { <Span id="403545"  > 
				std::cout &lt;&lt; "\n Global Function";
			<br></Span>} 
			break;
		<br></Span>} 
	<br></Span>} 
<br></Span>} 

static void globalFunction1() <br> <button onclick = "hidebutton('403633')">+</button> { <Span id="403633"  > 
	std::map&lt;int, int&gt; map = <br> <button onclick = "hidebutton('403660')">+</button> { <Span id="403660"  >  <br> <button onclick = "hidebutton('403662')">+</button> { <Span id="403662"  >  1,1 <br></Span>} ,<br> <button onclick = "hidebutton('403670')">+</button> { <Span id="403670"  >  2,2 <br></Span>}  <br></Span>} ;
	while (true) <br> <button onclick = "hidebutton('403694')">+</button> { <Span id="403694"  > 
		<br> <button onclick = "hidebutton('403697')">+</button> { <Span id="403697"  > 
			std::cout &lt;&lt; "\n Global Function";
		<br></Span>} 
		break;
	<br></Span>} 
<br></Span>} 
#endif


</pre> 
</body>
 </html>
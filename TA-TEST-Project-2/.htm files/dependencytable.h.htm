<html><head><script src="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\jshidebutton.js"></script><link rel="stylesheet" type="text/css" href="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\styling.css">
 </head>  
 <body> 
 <pre>
<h3> dependencytable.h</h3><h4>Dependencies:</h4><a href ="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\TA-TEST-Project-2\.htm files\NoSqlDb.h.htm"><label>NoSqlDb.h</label></a> <a href ="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\TA-TEST-Project-2\.htm files\dependencytable.h.htm"><label>dependencytable.h</label></a> <a href ="D:\imp\OOD\Projects\p2dep - Copy\p2dep - Copy\TA-TEST-Project-2\.htm files\typetable.h.htm"><label>typetable.h</label></a> 
 ----------------------------------------------------------------------------------------------------

#pragma once
/////////////////////////////////////////////////////////////////////
// dependencytable.h - dependency analysis and database creation	//
//  Mandar Mathure, CSE687 - Object Oriented Design, Spring 2017  //
//																   //
//  Language:      Visual C++ 2015		                           //
//  Platform:      Lenovo y700, Windows 10						   //
//  Application:   TypeBased-Dependency Analyzer CSE687 Pr2, Mar-7 //
//  Author:        Mandar Mathure, CST 4-187, Syracuse University  //
//                 (315) 949-8682, mmathure@syr.edu                //
//																	//
/////////////////////////////////////////////////////////////////////
/*
* - Manual Information
This package performs dependency analysis on the typetable created in typetable package.
The dependency analysis is stored in the database created in project 1 and a separate package is used to display the 
contents in xml format.

Public Interface:
=================
int makedatabase(),int makexml()

* - Build Process:
Required files
- Tokenizer.h,typetable.h,NoSqlDb.h,ActionsAndRules.h,Persist.h
Build commands
This is a static library builds with code analyzer
- devenv CodeAnalyzerEx.sln

* - Maintenance information
ver 1.0 : 4 Mar 2017
-	first release
ver 2.0: 12 Mar 2017
-added makexml()
-modified existing code to suit modular needs
*/
#include&lt;unordered_map&gt;
#include&lt;vector&gt;
#include &lt;fstream&gt;
#include &lt;iomanip&gt;
#include &lt;exception&gt;
#include &lt;locale&gt;
#include &lt;iostream&gt;
#include "../Tokenizer/Tokenizer.h"
#include "../typetable/typetable.h"
#include "../NoSqlDb/NoSqlDb.h"
#include "../Parser/ActionsAndRules.h"
#include&lt;algorithm&gt;
#include "../Persist/Persist.h"
#include &lt;set&gt;
using namespace Scanner;
using namespace CodeAnalysis;
class dependencytable <br> <button onclick = "hidebutton('430234')">+</button> { <Span id="430234"  > 

public:
	using mytablecolumns = std::pair&lt;std::string, std::string&gt;;
	using mytableentry = std::unordered_map&lt;std::string, mytablecolumns&gt;;
	using deptableentry = std::unordered_map&lt;std::string, std::set&lt;std::string&gt;&gt;;
	dependencytable();
	int makedatabase(std::string  filespec);
	int makexml(std::string xml);

	NoSqlDb&lt;StrData&gt; makedeptable(typetable& x, std::string filespec, std::string xmlname);


	deptableentry& dependencytable::getter_() <br> <button onclick = "hidebutton('430671')">+</button> { <Span id="430671"  > 

		return deptableentry_;
	<br></Span>} 



	void dependencytable::setter(deptableentry& x) <br> <button onclick = "hidebutton('430746')">+</button> { <Span id="430746"  > 

		deptableentry_ = x;

	<br></Span>} 






private:
	deptableentry deptableentry_;
	std::unordered_map&lt;std::string, int&gt; strongmap;
	NoSqlDb&lt;StrData&gt; DB;
	Element&lt;StrData&gt; elementadd;
	AbstrSynTree& ASTref_;







<br></Span>} ;









</pre> 
</body>
 </html>